{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const initialState = {\n  isLoggedIn: false,\n  logging: false,\n  currentUser: undefined\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    // define actions\n    login(state, actions) {\n      state.isLoggedIn = false;\n      state.logging = true;\n    },\n\n    loginSuccess(state, actions) {\n      state.isLoggedIn = true;\n      state.logging = true;\n      state.currentUser = actions.payload;\n    },\n\n    loginFailed(state, actions) {\n      state.isLoggedIn = false;\n      state.logging = false;\n    },\n\n    logout(state) {\n      state.isLoggedIn = false;\n      state.currentUser = undefined;\n    }\n\n  }\n}); // actions\n\nexport const authActions = authSlice.actions; // selector\n\nexport const selectIsLoggedIn = state => state.isLoggedIn;\nexport const selectIsLogging = state => state.logging; // reducers\n\nconst authReducer = authSlice.reducer;\nexport default authReducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","logging","currentUser","undefined","authSlice","name","reducers","login","state","actions","loginSuccess","payload","loginFailed","logout","authActions","selectIsLoggedIn","selectIsLogging","authReducer","reducer"],"sources":["C:/Workspace/INTERN/react-saga/src/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from 'models/Users';\r\n\r\nexport interface PayloadState {\r\n    user: String;\r\n    password: String;\r\n}\r\nexport interface AuthState {\r\n\tisLoggedIn: boolean;\r\n\tlogging: boolean;\r\n\tcurrentUser?: User;\r\n}\r\nexport const initialState: AuthState = {\r\n\tisLoggedIn: false,\r\n\tlogging: false,\r\n\tcurrentUser: undefined,\r\n};\r\nconst authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState: initialState,\r\n\treducers: {\r\n\t\t// define actions\r\n\t\tlogin(state, actions: PayloadAction<PayloadState>) {\r\n            state.isLoggedIn = false;\r\n            state.logging = true;\r\n        },\r\n\t\tloginSuccess(state, actions: PayloadAction<User>) {\r\n            state.isLoggedIn = true;\r\n            state.logging = true;\r\n            state.currentUser = actions.payload;\r\n        },\r\n\t\tloginFailed(state, actions: PayloadAction<String>) {\r\n            state.isLoggedIn = false;\r\n            state.logging = false;\r\n        },\r\n\t\tlogout(state) {\r\n            state.isLoggedIn = false;\r\n            state.currentUser = undefined;\r\n        },\r\n\t},\r\n});\r\n// actions\r\nexport const authActions = authSlice.actions;\r\n// selector\r\nexport const selectIsLoggedIn =  (state:AuthState) => state.isLoggedIn;\r\nexport const selectIsLogging = (state:AuthState) => state.logging;\r\n// reducers\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAYA,OAAO,MAAMC,YAAuB,GAAG;EACtCC,UAAU,EAAE,KAD0B;EAEtCC,OAAO,EAAE,KAF6B;EAGtCC,WAAW,EAAEC;AAHyB,CAAhC;AAKP,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC7BO,IAAI,EAAE,MADuB;EAE7BN,YAAY,EAAEA,YAFe;EAG7BO,QAAQ,EAAE;IACT;IACAC,KAAK,CAACC,KAAD,EAAQC,OAAR,EAA8C;MACzCD,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,IAAhB;IACH,CALE;;IAMTS,YAAY,CAACF,KAAD,EAAQC,OAAR,EAAsC;MACxCD,KAAK,CAACR,UAAN,GAAmB,IAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,IAAhB;MACAO,KAAK,CAACN,WAAN,GAAoBO,OAAO,CAACE,OAA5B;IACH,CAVE;;IAWTC,WAAW,CAACJ,KAAD,EAAQC,OAAR,EAAwC;MACzCD,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,KAAhB;IACH,CAdE;;IAeTY,MAAM,CAACL,KAAD,EAAQ;MACJA,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACN,WAAN,GAAoBC,SAApB;IACH;;EAlBE;AAHmB,CAAD,CAA7B,C,CAwBA;;AACA,OAAO,MAAMW,WAAW,GAAGV,SAAS,CAACK,OAA9B,C,CACP;;AACA,OAAO,MAAMM,gBAAgB,GAAKP,KAAD,IAAqBA,KAAK,CAACR,UAArD;AACP,OAAO,MAAMgB,eAAe,GAAIR,KAAD,IAAqBA,KAAK,CAACP,OAAnD,C,CACP;;AACA,MAAMgB,WAAW,GAAGb,SAAS,CAACc,OAA9B;AACA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}