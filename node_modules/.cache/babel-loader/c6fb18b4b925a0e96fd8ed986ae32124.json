{"ast":null,"code":"import { takeEvery, delay, put } from 'redux-saga/effects';\nimport { incrementSaga, incrementSagaSuccess } from './counterSlice';\n\nfunction* handleCountSaga(action) {\n  yield delay(1000);\n  yield put(incrementSagaSuccess(action.payload));\n}\n\nexport default function* counterSagas() {\n  yield takeEvery(incrementSaga.toString(), handleCountSaga);\n}","map":{"version":3,"names":["takeEvery","delay","put","incrementSaga","incrementSagaSuccess","handleCountSaga","action","payload","counterSagas","toString"],"sources":["C:/Workspace/INTERN/react-saga/src/features/counter/counterSaga.ts"],"sourcesContent":["import { takeEvery, delay, put } from 'redux-saga/effects';\r\nimport { PayloadAction } from '@reduxjs/toolkit';\r\nimport { incrementSaga, incrementSagaSuccess } from './counterSlice';\r\nfunction* handleCountSaga(action: PayloadAction<number>) {\r\n\tyield delay(1000);\r\n\tyield put(incrementSagaSuccess(action.payload));\r\n}\r\nexport default function* counterSagas() {\r\n\tyield takeEvery(incrementSaga.toString(), handleCountSaga);\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,KAApB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAASC,aAAT,EAAwBC,oBAAxB,QAAoD,gBAApD;;AACA,UAAUC,eAAV,CAA0BC,MAA1B,EAAyD;EACxD,MAAML,KAAK,CAAC,IAAD,CAAX;EACA,MAAMC,GAAG,CAACE,oBAAoB,CAACE,MAAM,CAACC,OAAR,CAArB,CAAT;AACA;;AACD,eAAe,UAAUC,YAAV,GAAyB;EACvC,MAAMR,SAAS,CAACG,aAAa,CAACM,QAAd,EAAD,EAA2BJ,eAA3B,CAAf;AACA"},"metadata":{},"sourceType":"module"}