{"ast":null,"code":"import { fork, take } from 'redux-saga/effects';\nimport { authActions } from './authSlice';\n\nfunction* handleLogin(payload) {\n  console.log('Bo may login', payload);\n}\n\nfunction* handleLogOut() {\n  console.log('mother fucker');\n}\n\nfunction* handleLoginFlow() {\n  while (true) {\n    const action = yield take(authActions.login.type);\n    yield fork(handleLogin, action.payload);\n    yield take(authActions.logOut.type);\n    yield fork(handleLogOut);\n  }\n}\n\nexport default function* authSage() {\n  yield fork(handleLoginFlow);\n}","map":{"version":3,"names":["fork","take","authActions","handleLogin","payload","console","log","handleLogOut","handleLoginFlow","action","login","type","logOut","authSage"],"sources":["C:/Workspace/INTERN/react-saga/src/features/auth/authSaga.ts"],"sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { fork, take } from 'redux-saga/effects';\r\nimport { authActions, PayLoadState } from './authSlice';\r\n\r\nfunction* handleLogin(payload: PayLoadState) {\r\n\tconsole.log('Bo may login', payload);\r\n}\r\nfunction* handleLogOut() {\r\n\tconsole.log('mother fucker');\r\n}\r\nfunction* handleLoginFlow() {\r\n\twhile (true) {\r\n\t\tconst action: PayloadAction<PayLoadState> = yield take(authActions.login.type);\r\n\t\tyield fork(handleLogin, action.payload);\r\n\t\tyield take(authActions.logOut.type);\r\n\t\tyield fork(handleLogOut);\r\n\t}\r\n}\r\n\r\nexport default function* authSage() {\r\n\tyield fork(handleLoginFlow);\r\n}\r\n"],"mappings":"AACA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,WAAT,QAA0C,aAA1C;;AAEA,UAAUC,WAAV,CAAsBC,OAAtB,EAA6C;EAC5CC,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BF,OAA5B;AACA;;AACD,UAAUG,YAAV,GAAyB;EACxBF,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA;;AACD,UAAUE,eAAV,GAA4B;EAC3B,OAAO,IAAP,EAAa;IACZ,MAAMC,MAAmC,GAAG,MAAMR,IAAI,CAACC,WAAW,CAACQ,KAAZ,CAAkBC,IAAnB,CAAtD;IACA,MAAMX,IAAI,CAACG,WAAD,EAAcM,MAAM,CAACL,OAArB,CAAV;IACA,MAAMH,IAAI,CAACC,WAAW,CAACU,MAAZ,CAAmBD,IAApB,CAAV;IACA,MAAMX,IAAI,CAACO,YAAD,CAAV;EACA;AACD;;AAED,eAAe,UAAUM,QAAV,GAAqB;EACnC,MAAMb,IAAI,CAACQ,eAAD,CAAV;AACA"},"metadata":{},"sourceType":"module"}