{"ast":null,"code":"import { takeEvery, delay, put } from \"redux-saga/effects\";\nimport { incrementSaga, incrementSagaSuccess } from \"./counterSlice\";\n\nfunction* handleCountSaga(action) {\n  delay(1000);\n  put(incrementSagaSuccess(action.value));\n}\n\nexport default function* counterSagas() {\n  yield takeEvery(incrementSaga.toString(), handleCountSaga);\n}","map":{"version":3,"names":["takeEvery","delay","put","incrementSaga","incrementSagaSuccess","handleCountSaga","action","value","counterSagas","toString"],"sources":["C:/Workspace/INTERN/react-saga/src/features/counter/counterSaga.ts"],"sourcesContent":["import { takeEvery , delay, put} from \"redux-saga/effects\";\r\nimport { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { incrementSaga,incrementSagaSuccess } from \"./counterSlice\";\r\nfunction* handleCountSaga(action:PayloadAction<number>){\r\n    delay(1000);\r\n    put(incrementSagaSuccess(action.value));\r\n}\r\nexport default function * counterSagas() {\r\n  yield takeEvery(incrementSaga.toString(),handleCountSaga)\r\n}"],"mappings":"AAAA,SAASA,SAAT,EAAqBC,KAArB,EAA4BC,GAA5B,QAAsC,oBAAtC;AAEA,SAASC,aAAT,EAAuBC,oBAAvB,QAAmD,gBAAnD;;AACA,UAAUC,eAAV,CAA0BC,MAA1B,EAAuD;EACnDL,KAAK,CAAC,IAAD,CAAL;EACAC,GAAG,CAACE,oBAAoB,CAACE,MAAM,CAACC,KAAR,CAArB,CAAH;AACH;;AACD,eAAe,UAAWC,YAAX,GAA0B;EACvC,MAAMR,SAAS,CAACG,aAAa,CAACM,QAAd,EAAD,EAA0BJ,eAA1B,CAAf;AACD"},"metadata":{},"sourceType":"module"}