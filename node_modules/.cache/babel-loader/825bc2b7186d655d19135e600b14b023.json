{"ast":null,"code":"import { fork, take } from \"redux-saga/effects\";\nimport { authActions } from \"./authSlice\";\n\nfunction* handleLogin(payload) {\n  console.log(\"Login\", payload);\n}\n\nfunction* handleLogout() {\n  console.log(\"Logout\");\n}\n\nfunction* watchLoginFlow() {\n  const action = yield take(authActions.login.type);\n  yield fork(handleLogin, action.payload);\n  yield take(authActions.logout.type);\n  yield fork(handleLogout);\n}\n\nexport default function* authSaga() {\n  yield fork(watchLoginFlow);\n}","map":{"version":3,"names":["fork","take","authActions","handleLogin","payload","console","log","handleLogout","watchLoginFlow","action","login","type","logout","authSaga"],"sources":["C:/Workspace/INTERN/react-saga/src/features/auth/authSaga.ts"],"sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { fork, take } from \"redux-saga/effects\";\r\nimport { authActions, LoginPayload } from \"./authSlice\";\r\nfunction * handleLogin(payload: LoginPayload) {\r\n    console.log(\"Login\",payload);\r\n}\r\nfunction * handleLogout() {\r\n    console.log(\"Logout\")\r\n}\r\nfunction * watchLoginFlow () {\r\n    const action:PayloadAction<LoginPayload> = yield take(authActions.login.type);\r\n    yield fork(handleLogin,action.payload);\r\n    yield take(authActions.logout.type);\r\n    yield fork(handleLogout);\r\n\r\n}\r\n export default function * authSaga() {\r\n    yield fork(watchLoginFlow)\r\n }"],"mappings":"AACA,SAASA,IAAT,EAAeC,IAAf,QAA2B,oBAA3B;AACA,SAASC,WAAT,QAA0C,aAA1C;;AACA,UAAWC,WAAX,CAAuBC,OAAvB,EAA8C;EAC1CC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,OAApB;AACH;;AACD,UAAWG,YAAX,GAA0B;EACtBF,OAAO,CAACC,GAAR,CAAY,QAAZ;AACH;;AACD,UAAWE,cAAX,GAA6B;EACzB,MAAMC,MAAkC,GAAG,MAAMR,IAAI,CAACC,WAAW,CAACQ,KAAZ,CAAkBC,IAAnB,CAArD;EACA,MAAMX,IAAI,CAACG,WAAD,EAAaM,MAAM,CAACL,OAApB,CAAV;EACA,MAAMH,IAAI,CAACC,WAAW,CAACU,MAAZ,CAAmBD,IAApB,CAAV;EACA,MAAMX,IAAI,CAACO,YAAD,CAAV;AAEH;;AACA,eAAe,UAAWM,QAAX,GAAsB;EAClC,MAAMb,IAAI,CAACQ,cAAD,CAAV;AACF"},"metadata":{},"sourceType":"module"}