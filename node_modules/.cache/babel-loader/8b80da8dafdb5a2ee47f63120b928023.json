{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  isLoggedIn: false,\n  logging: false,\n  userInfo: undefined\n};\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState: initialState,\n  reducers: {\n    login(state, actions) {\n      state.isLoggedIn = false;\n      state.logging = true;\n    },\n\n    loginSucces(state, actions) {\n      state.isLoggedIn = true;\n      state.logging = false;\n      state.userInfo = actions.payload;\n    },\n\n    loginFailed(state, actions) {\n      state.isLoggedIn = false;\n      state.logging = false;\n    },\n\n    logOut(state) {\n      state.isLoggedIn = false;\n      state.userInfo = undefined;\n    }\n\n  }\n}); // actions\n\nexport const authActions = authSlice.actions; // selector\n\nexport const authSelectorLoginedIn = state => state.isLoggedIn;\nexport const authSelectorUserInfo = state => state.userInfo; // reducers\n\nconst authReducer = authSlice.reducer;\nexport default authReducer;","map":{"version":3,"names":["createSlice","initialState","isLoggedIn","logging","userInfo","undefined","authSlice","name","reducers","login","state","actions","loginSucces","payload","loginFailed","logOut","authActions","authSelectorLoginedIn","authSelectorUserInfo","authReducer","reducer"],"sources":["C:/Workspace/INTERN/react-saga/src/features/auth/authSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from 'models/Users';\r\nexport interface PayLoadState {\r\n\temail?: string;\r\n\tpassword?: string;\r\n}\r\nexport interface authState {\r\n\tisLoggedIn: boolean;\r\n\tlogging: boolean;\r\n\tuserInfo?: User;\r\n}\r\n\r\nconst initialState: authState = {\r\n\tisLoggedIn: false,\r\n\tlogging: false,\r\n\tuserInfo: undefined,\r\n};\r\nexport const authSlice = createSlice({\r\n\tname: 'auth',\r\n\tinitialState: initialState,\r\n\treducers: {\r\n\t\tlogin(state, actions: PayloadAction<PayLoadState>) {\r\n\t\t\tstate.isLoggedIn = false;\r\n\t\t\tstate.logging = true;\r\n\t\t},\r\n\t\tloginSucces(state, actions: PayloadAction<User>) {\r\n\t\t\tstate.isLoggedIn = true;\r\n\t\t\tstate.logging = false;\r\n\t\t\tstate.userInfo = actions.payload;\r\n\t\t},\r\n\t\tloginFailed(state, actions: PayloadAction<String>) {\r\n\t\t\tstate.isLoggedIn = false;\r\n\t\t\tstate.logging = false;\r\n\t\t},\r\n\t\tlogOut(state) {\r\n\t\t\tstate.isLoggedIn = false;\r\n\t\t\tstate.userInfo = undefined;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n// actions\r\nexport const authActions = authSlice.actions;\r\n// selector\r\nexport const authSelectorLoginedIn = (state: any) => state.isLoggedIn;\r\nexport const authSelectorUserInfo = (state: any) => state.userInfo;\r\n// reducers\r\n\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA2C,kBAA3C;AAYA,MAAMC,YAAuB,GAAG;EAC/BC,UAAU,EAAE,KADmB;EAE/BC,OAAO,EAAE,KAFsB;EAG/BC,QAAQ,EAAEC;AAHqB,CAAhC;AAKA,OAAO,MAAMC,SAAS,GAAGN,WAAW,CAAC;EACpCO,IAAI,EAAE,MAD8B;EAEpCN,YAAY,EAAEA,YAFsB;EAGpCO,QAAQ,EAAE;IACTC,KAAK,CAACC,KAAD,EAAQC,OAAR,EAA8C;MAClDD,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,IAAhB;IACA,CAJQ;;IAKTS,WAAW,CAACF,KAAD,EAAQC,OAAR,EAAsC;MAChDD,KAAK,CAACR,UAAN,GAAmB,IAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,KAAhB;MACAO,KAAK,CAACN,QAAN,GAAiBO,OAAO,CAACE,OAAzB;IACA,CATQ;;IAUTC,WAAW,CAACJ,KAAD,EAAQC,OAAR,EAAwC;MAClDD,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACP,OAAN,GAAgB,KAAhB;IACA,CAbQ;;IAcTY,MAAM,CAACL,KAAD,EAAQ;MACbA,KAAK,CAACR,UAAN,GAAmB,KAAnB;MACAQ,KAAK,CAACN,QAAN,GAAiBC,SAAjB;IACA;;EAjBQ;AAH0B,CAAD,CAA7B,C,CAwBP;;AACA,OAAO,MAAMW,WAAW,GAAGV,SAAS,CAACK,OAA9B,C,CACP;;AACA,OAAO,MAAMM,qBAAqB,GAAIP,KAAD,IAAgBA,KAAK,CAACR,UAApD;AACP,OAAO,MAAMgB,oBAAoB,GAAIR,KAAD,IAAgBA,KAAK,CAACN,QAAnD,C,CACP;;AAEA,MAAMe,WAAW,GAAGb,SAAS,CAACc,OAA9B;AACA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}