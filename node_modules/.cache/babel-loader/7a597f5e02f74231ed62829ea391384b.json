{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport creatSagaMiddleware from 'redux-saga';\nconst sagaMiddleware = creatSagaMiddleware();\nexport const store = configureStore({\n  reducer: {\n    counter: counterReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(sagaMiddleware),\n  devTools: true\n});","map":{"version":3,"names":["configureStore","counterReducer","creatSagaMiddleware","sagaMiddleware","store","reducer","counter","middleware","getDefaultMiddleware","concat","devTools"],"sources":["C:/Workspace/INTERN/react-saga/src/app/store.ts"],"sourcesContent":["import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport counterReducer from '../features/counter/counterSlice';\nimport creatSagaMiddleware from 'redux-saga';\nconst sagaMiddleware = creatSagaMiddleware();\nexport const store = configureStore({\n\treducer: {\n\t\tcounter: counterReducer,\n\t},\n\tmiddleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(sagaMiddleware),\n\tdevTools: true,\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n\tReturnType,\n\tRootState,\n\tunknown,\n\tAction<string>\n>;\n"],"mappings":"AAAA,SAASA,cAAT,QAAoD,kBAApD;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,mBAAP,MAAgC,YAAhC;AACA,MAAMC,cAAc,GAAGD,mBAAmB,EAA1C;AACA,OAAO,MAAME,KAAK,GAAGJ,cAAc,CAAC;EACnCK,OAAO,EAAE;IACRC,OAAO,EAAEL;EADD,CAD0B;EAInCM,UAAU,EAAGC,oBAAD,IAA0BA,oBAAoB,GAAGC,MAAvB,CAA8BN,cAA9B,CAJH;EAKnCO,QAAQ,EAAE;AALyB,CAAD,CAA5B"},"metadata":{},"sourceType":"module"}