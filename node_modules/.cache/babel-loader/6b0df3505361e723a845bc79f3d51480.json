{"ast":null,"code":"import { call, fork, take } from 'redux-saga/effects';\nimport { authActions } from './authSlice';\n\nfunction* handleLogin(payload) {\n  try {\n    // call api login;\n    localStorage.setItem(\"accessToken\", 'ânfafnfan');\n    yield put(authActions.loginSucces({\n      id: 1,\n      name: 'Hoang',\n      email: 'absc'\n    }));\n  } catch (err) {}\n}\n\nfunction* handleLogOut() {}\n\nfunction* handleLoginFlow() {\n  while (true) {\n    const isLoggedIn = localStorage.getItem('accessToken');\n\n    if (isLoggedIn) {\n      yield take(authActions.logOut.type);\n      yield fork(handleLogOut);\n    }\n\n    const action = yield take(authActions.login.type);\n    yield call(handleLogin, action.payload);\n  }\n}\n\nexport default function* authSage() {\n  yield call(handleLoginFlow);\n}","map":{"version":3,"names":["call","fork","take","authActions","handleLogin","payload","localStorage","setItem","put","loginSucces","id","name","email","err","handleLogOut","handleLoginFlow","isLoggedIn","getItem","logOut","type","action","login","authSage"],"sources":["C:/Workspace/INTERN/react-saga/src/features/auth/authSaga.ts"],"sourcesContent":["import { PayloadAction } from '@reduxjs/toolkit';\r\nimport { call, fork, take } from 'redux-saga/effects';\r\nimport { authActions, PayLoadState } from './authSlice';\r\n\r\nfunction* handleLogin(payload: PayLoadState) {\r\n\ttry {\r\n\t\t// call api login;\r\n\t\tlocalStorage.setItem(\"accessToken\",'ânfafnfan');\r\n\t\tyield put(authActions.loginSucces({\r\n\t\t\tid:1,\r\n\t\t\tname:'Hoang',\r\n\t\t\temail:'absc'\r\n\t\t}))\r\n\t}catch (err) {\r\n\r\n\t}\r\n\r\n}\r\nfunction* handleLogOut() {\r\n\t\r\n}\r\nfunction* handleLoginFlow() {\r\n\twhile (true) {\r\n\t\tconst isLoggedIn = localStorage.getItem('accessToken');\r\n\t\tif (isLoggedIn) {\r\n\t\t\tyield take(authActions.logOut.type);\r\n\t\t\tyield fork(handleLogOut);\r\n\t\t}\r\n\t\tconst action: PayloadAction<PayLoadState> = yield take(authActions.login.type);\r\n\t\tyield call(handleLogin, action.payload);\r\n\t}\r\n}\r\n\r\nexport default function* authSage() {\r\n\tyield call(handleLoginFlow);\r\n}\r\n"],"mappings":"AACA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,oBAAjC;AACA,SAASC,WAAT,QAA0C,aAA1C;;AAEA,UAAUC,WAAV,CAAsBC,OAAtB,EAA6C;EAC5C,IAAI;IACH;IACAC,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAmC,WAAnC;IACA,MAAMC,GAAG,CAACL,WAAW,CAACM,WAAZ,CAAwB;MACjCC,EAAE,EAAC,CAD8B;MAEjCC,IAAI,EAAC,OAF4B;MAGjCC,KAAK,EAAC;IAH2B,CAAxB,CAAD,CAAT;EAKA,CARD,CAQC,OAAOC,GAAP,EAAY,CAEZ;AAED;;AACD,UAAUC,YAAV,GAAyB,CAExB;;AACD,UAAUC,eAAV,GAA4B;EAC3B,OAAO,IAAP,EAAa;IACZ,MAAMC,UAAU,GAAGV,YAAY,CAACW,OAAb,CAAqB,aAArB,CAAnB;;IACA,IAAID,UAAJ,EAAgB;MACf,MAAMd,IAAI,CAACC,WAAW,CAACe,MAAZ,CAAmBC,IAApB,CAAV;MACA,MAAMlB,IAAI,CAACa,YAAD,CAAV;IACA;;IACD,MAAMM,MAAmC,GAAG,MAAMlB,IAAI,CAACC,WAAW,CAACkB,KAAZ,CAAkBF,IAAnB,CAAtD;IACA,MAAMnB,IAAI,CAACI,WAAD,EAAcgB,MAAM,CAACf,OAArB,CAAV;EACA;AACD;;AAED,eAAe,UAAUiB,QAAV,GAAqB;EACnC,MAAMtB,IAAI,CAACe,eAAD,CAAV;AACA"},"metadata":{},"sourceType":"module"}